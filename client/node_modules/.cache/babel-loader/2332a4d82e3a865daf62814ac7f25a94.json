{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/1867792/Desktop/witsie/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","START_LOADING","END_LOADING","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,UAArC,EAAiDC,MAAjD,EAAyDC,MAAzD,EAAiEC,MAAjE,EAAyEC,IAAzE,EAA+EC,aAA/E,EAA8FC,WAA9F,QAAgH,0BAAhH;AAEA,gBAAe,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE,IAAZ;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAAT,EAAuCC,MAAvC,KAAkD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AACKC,QAAAA,SAAS,EAAE;AADhB,OAAP;;AAGA,SAAKF,WAAL;AACA,aAAO,EACL,GAAGC,KADE;AACKC,QAAAA,SAAS,EAAE;AADhB,OAAP;;AAID,SAAKV,SAAL;AACA,aAAO,EACN,GAAGS,KADG;AAENE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFhB;AAGNC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHtB;AAINC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJxB,OAAP;;AAOC,SAAKhB,eAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAFT,OAAP;;AAIA,SAAKZ,UAAL;AACA,aAAO,EACL,GAAGO,KADE;AAELS,QAAAA,IAAI,EAAEN,MAAM,CAACE;AAFR,OAAP;;AAOJ,SAAKR,IAAL;AACE,aAAO,EAAC,GAAGG,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;AAAlB,OAAP;;AAEF,SAAKf,MAAL;AACE,aAAQ,EAAC,GAAGM,KAAJ;AAAWE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAlB,OAAR;;AAEF,SAAKV,MAAL;AACE,aAAQ,EAAC,GAAGK,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;AAAlB,OAAR;;AAEF,SAAKb,MAAL;AACE,aAAQ,EAAC,GAAGI,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;AAAlB,OAAR;;AACF;AACE,aAAOL,KAAP;AA3CJ;AA6CD,CA9CD","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING} from '../constants/actionTypes';\r\n\r\nexport default (state = {isLoading: true, posts: []}, action) => {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return {\r\n        ...state, isLoading: true\r\n      };\r\n      case END_LOADING: \r\n      return {\r\n        ...state, isLoading: false\r\n      };\r\n\r\n     case FETCH_ALL:\r\n     return {\r\n      ...state,\r\n      posts: action.payload.data,\r\n      currentPage: action.payload.currentPage,\r\n      numberOfPages: action.payload.numberOfPages,\r\n    };\r\n\r\n      case FETCH_BY_SEARCH:\r\n        return {\r\n          ...state,\r\n          posts: action.payload\r\n        };\r\n        case FETCH_POST:\r\n        return {\r\n          ...state,\r\n          post: action.payload\r\n        };\r\n\r\n\r\n\r\n    case LIKE:\r\n      return {...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))}\r\n\r\n    case CREATE:\r\n      return  {...state, posts: [...state.posts, action.payload]};\r\n\r\n    case UPDATE:\r\n      return  {...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\r\n\r\n    case DELETE:\r\n      return  {...state, posts: state.posts.filter((post) => post._id !== action.payload)};\r\n    default:\r\n      return state;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}