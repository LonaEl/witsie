{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1867792\\\\Desktop\\\\witsie\\\\client\\\\src\\\\components\\\\Posts\\\\Posts.js\";\nimport React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport pdf from '../../images/create-pdfs.pdf';\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = ({\n  setCurrentId\n}) => {\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const classes = useStyles(); //IF THE POST DOESN'T CONTAIN OTHER ITEMS SUCH AS ISLOADING PROPERTY, NUMBER OF PAGES\n  //const Posts = ({ setCurrentId }) => {\n  //const posts = useSelector((state) => state.posts); \n  // const classes = useStyles();\n\n  if (!posts.length && !isLoading) return \"No posts\";\n  return isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(Grid, {\n    key: post._id,\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Post, {\n    post: post,\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"embed\", {\n    src: pdf,\n    height: \"500\",\n    width: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/1867792/Desktop/witsie/client/src/components/Posts/Posts.js"],"names":["React","Grid","CircularProgress","useSelector","pdf","Post","useStyles","Posts","setCurrentId","posts","isLoading","state","classes","length","container","map","post","_id"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAClC,QAAK;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACF,KAAlB,CAAvC;AACA,QAAMG,OAAO,GAAGN,SAAS,EAAzB,CAFkC,CAIlC;AACA;AACE;AACD;;AAEA,MAAG,CAACG,KAAK,CAACI,MAAP,IAAiB,CAACH,SAArB,EAAgC,OAAO,UAAP;AAGjC,SACEA,SAAS,gBAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACP,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACE,SAAzB;AAAoC,IAAA,SAAS,MAA7C;AAA8C,IAAA,UAAU,EAAC,SAAzD;AAAmE,IAAA,OAAO,EAAE,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAhB;AAAqB,IAAA,IAAI,MAAzB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAkC,IAAA,EAAE,EAAE,EAAtC;AAA0C,IAAA,EAAE,EAAE,CAA9C;AAAiD,IAAA,EAAE,EAAE,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAkB,IAAA,YAAY,EAAER,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,eAME;AAAO,IAAA,GAAG,EAAEJ,GAAZ;AAAiB,IAAA,MAAM,EAAC,KAAxB;AAA8B,IAAA,KAAK,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFJ;AAYD,CAxBD;;AA0BA,eAAeG,KAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport pdf from '../../images/create-pdfs.pdf'\r\n\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  const{ posts, isLoading } = useSelector((state) => state.posts);\r\n  const classes = useStyles();\r\n\r\n  //IF THE POST DOESN'T CONTAIN OTHER ITEMS SUCH AS ISLOADING PROPERTY, NUMBER OF PAGES\r\n  //const Posts = ({ setCurrentId }) => {\r\n    //const posts = useSelector((state) => state.posts); \r\n   // const classes = useStyles();\r\n\r\n   if(!posts.length && !isLoading) return \"No posts\"\r\n  \r\n\r\n  return (\r\n    isLoading ? <CircularProgress /> : (\r\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n        {posts.map((post) => (\r\n          <Grid key={post._id} item xs={12} sm={12} md={6} lg={3} >\r\n            <Post post={post} setCurrentId={setCurrentId} />\r\n          </Grid>\r\n        ))}\r\n        <embed src={pdf} height=\"500\" width=\"1000\" />\r\n      </Grid>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}