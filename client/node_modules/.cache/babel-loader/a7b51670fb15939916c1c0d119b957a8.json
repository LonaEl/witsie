{"ast":null,"code":"import { STATES } from 'mongoose';\nimport { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        curre\n      };\n\n    case FETCH_BY_SEARCH:\n      return action.payload;\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["C:/Users/1867792/Uploader/witsie/client/src/reducers/posts.js"],"names":["STATES","FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","posts","action","type","state","payload","data","curre","map","post","_id","filter"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqDC,MAArD,EAA6DC,IAA7D,QAAwE,0BAAxE;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACA,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,KAAK,EAAEC,MAAM,CAACG,OAAP,CAAeC,IAFjB;AAGLC,QAAAA;AAHK,OAAP;;AAKE,SAAKX,eAAL;AACE,aAAOM,MAAM,CAACG,OAAd;;AACJ,SAAKL,IAAL;AACE,aAAOC,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,GAAkCR,MAAM,CAACG,OAAzC,GAAmDI,IAAxE,CAAP;;AACF,SAAKZ,MAAL;AACE,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOG,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,GAAkCR,MAAM,CAACG,OAAzC,GAAmDI,IAAxE,CAAP;;AACF,SAAKV,MAAL;AACE,aAAOE,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAA3C,CAAP;;AACF;AACE,aAAOJ,KAAP;AAlBJ;AAoBD,CArBD","sourcesContent":["import { STATES } from 'mongoose';\r\nimport { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE} from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n    return {\r\n      ...state,\r\n      posts: action.payload.data,\r\n      curre\r\n    };\r\n      case FETCH_BY_SEARCH:\r\n        return action.payload;\r\n    case LIKE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n    case UPDATE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}